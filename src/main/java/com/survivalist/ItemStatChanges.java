package com.survivalist;

import com.google.inject.Singleton;
import java.util.HashMap;
import java.util.Map;

import lombok.extern.slf4j.Slf4j;
import static net.runelite.api.ItemID.*;

@Singleton
@Slf4j
public class ItemStatChanges
{
    ItemStatChanges()
    {
        init();
    }

    private void init()
    {
        add(-5, POISON_KARAMBWAN);
        add(1, POTATO, ONION, CABBAGE, POT_OF_CREAM, CHOPPED_ONION, ANCHOVIES, NETTLEWATER, EQUA_LEAVES,
                FRESH_MONKFISH_7943 /* Cooked */, COOKED_CHICKEN_4291 /* Undead */, COOKED_MEAT_4293 /* Undead */);
        add(2, TOMATO, CHOPPED_TOMATO, BANANA, SLICED_BANANA, ORANGE, ORANGE_SLICES, ORANGE_CHUNKS,
                PINEAPPLE_RING, PINEAPPLE_CHUNKS, SPICY_SAUCE, CHEESE, SPINACH_ROLL, LEMON, LEMON_CHUNKS, LEMON_SLICES,
                LIME, LIME_CHUNKS, LIME_SLICES, DWELLBERRIES, KING_WORM, MINCED_MEAT, SPICY_TOMATO, WHITE_PEARL);
        add(3, SHRIMPS, COOKED_MEAT, COOKED_CHICKEN, ROE, CHOCOLATE_BAR, UGTHANKI_MEAT, TOADS_LEGS, ONION__TOMATO,
                SPICY_MINCED_MEAT, SLICE_OF_BIRTHDAY_CAKE, LOCUST_MEAT, RELICYMS_MIX1, RELICYMS_MIX2, ANTIPOISON_MIX1,
                ANTIPOISON_MIX2);
        add(4, SARDINE, CAKE, _23_CAKE, SLICE_OF_CAKE, CHOCOLATEY_MILK, BAKED_POTATO, EDIBLE_SEAWEED, MOONLIGHT_MEAD,
                MOONLIGHT_MEAD4, MOONLIGHT_MEAD3, MOONLIGHT_MEAD2, MOONLIGHT_MEAD1, MONKEY_NUTS);
        add(5, BREAD, HERRING, CHOCOLATE_CAKE, _23_CHOCOLATE_CAKE, CHOCOLATE_SLICE, COOKED_RABBIT, CHILLI_CON_CARNE,
                FRIED_MUSHROOMS, FRIED_ONIONS, REDBERRY_PIE, HALF_A_REDBERRY_PIE, CAVIAR, PYSK_FISH_0, COOKED_MYSTERY_MEAT,
                SCRAMBLED_EGG, MONKEY_BAR, TCHIKI_MONKEY_NUTS, TCHIKI_NUT_PASTE, RED_BANANA, SLICED_RED_BANANA);
        add(6, CHOCICE, MACKEREL, MEAT_PIE, HALF_A_MEAT_PIE, GUANIC_BAT_0, ROAST_BIRD_MEAT, SQUARE_SANDWICH,
                ROLL, BAGUETTE, TRIANGLE_SANDWICH, GIANT_CARP, MOONLIGHT_MEADM, MOONLIGHT_MEADM4, MOONLIGHT_MEADM3, MOONLIGHT_MEADM2,
                MOONLIGHT_MEADM1, STEAK_SANDWICH, GIANT_FROG_LEGS, ANTIFIRE_MIX1, ANTIFIRE_MIX2, EXTENDED_ANTIFIRE_MIX1,
                EXTENDED_ANTIFIRE_MIX2, SUPER_ANTIFIRE_MIX1, SUPER_ANTIFIRE_MIX2, EXTENDED_SUPER_ANTIFIRE_MIX1,
                EXTENDED_SUPER_ANTIFIRE_MIX2, ANTIPOISON_SUPERMIX1, ANTIPOISON_SUPERMIX2, ANTIDOTE_MIX1, ANTIDOTE_MIX2);
        add(7, TROUT, COD, PLAIN_PIZZA, _12_PLAIN_PIZZA, APPLE_PIE, HALF_AN_APPLE_PIE, ROAST_RABBIT,
                PREMADE_CH_CRUNCH, CHOCCHIP_CRUNCHIES, PREMADE_SY_CRUNCH, SPICY_CRUNCHIES);
        add(8, PIKE, ROAST_BEAST_MEAT, MEAT_PIZZA, _12_MEAT_PIZZA, PREMADE_WM_CRUN, WORM_CRUNCHIES, PREMADE_TD_CRUNCH,
                TOAD_CRUNCHIES, EGG_AND_TOMATO, PRAEL_BAT_1, PEACH, SUPHI_FISH_1);
        add(9, PREMADE_P_PUNCH, PINEAPPLE_PUNCH, PREMADE_FR_BLAST, FRUIT_BLAST, SALMON, ANCHOVY_PIZZA,
                _12_ANCHOVY_PIZZA);
        add(10, TUNA, COOKED_CRAB_MEAT, CHOPPED_TUNA, COOKED_CHOMPY, FIELD_RATION, DRAGONFRUIT,
                TUNA_26149 /* Deadman Starter Pack */);
        add(11, RAINBOW_FISH, STEW, PINEAPPLE_PIZZA, _12_PINEAPPLE_PIZZA, COOKED_FISHCAKE,
                PREMADE_VEG_BATTA, VEGETABLE_BATTA, PREMADE_WM_BATTA, WORM_BATTA, PREMADE_TD_BATTA, TOAD_BATTA, PREMADE_CT_BATTA,
                CHEESETOM_BATTA, PREMADE_FRT_BATTA, FRUIT_BATTA, MUSHROOM__ONION, GIRAL_BAT_2, LAVA_EEL, LECKISH_FISH_2, BANANA_STEW);
        add(12, LOBSTER, PREMADE_WORM_HOLE, WORM_HOLE, PREMADE_VEG_BALL, VEG_BALL);
        add(13, BASS, TUNA_AND_CORN);
        add(14, POTATO_WITH_BUTTER, CHILLI_POTATO, SWORDFISH, PHLUXIA_BAT_3, PUMPKIN, EASTER_EGG, BRAWK_FISH_3,
                COOKED_OOMLIE_WRAP);
        add(15, PREMADE_TTL, TANGLED_TOADS_LEGS, PREMADE_CHOC_BOMB, CHOCOLATE_BOMB, COOKED_JUBBLY);
        add(16, MONKFISH, POTATO_WITH_CHEESE, EGG_POTATO, CRYSTAL_PADDLEFISH, CORRUPTED_PADDLEFISH);
        add(17, MYCIL_FISH_4, KRYKET_BAT_4);
        add(18, COOKED_KARAMBWAN, BLIGHTED_KARAMBWAN, COOKED_KARAMBWAN_23533 /* LMS */);
        add(19, CURRY, UGTHANKI_KEBAB, UGTHANKI_KEBAB_1885);
        add(20, MUSHROOM_POTATO, SHARK, ROQED_FISH_5, MURNG_BAT_5, STUFFED_SNAKE, SHARK_20390 /* LMS */, PADDLEFISH);
        add(21, SEA_TURTLE);
        add(22, MANTA_RAY, BLIGHTED_MANTA_RAY, DARK_CRAB, TUNA_POTATO);
        add(23, KYREN_FISH_6, PSYKK_BAT_6);
        add(1, CABBAGE_1967);
        add(8, PAPAYA_FRUIT);
        add(3, CUP_OF_TEA_1978, NETTLE_TEA, NETTLE_TEA_4240 /* Milky */, CUP_OF_TEA_4242 /* Nettle */, CUP_OF_TEA_4243 /* Milky nettle */);
        add(7, THIN_SNAIL_MEAT);
        add(8, LEAN_SNAIL_MEAT);
        add(9, FAT_SNAIL_MEAT);
        add(10, SPIDER_ON_STICK_6297, SPIDER_ON_SHAFT_6299);

        add(2, BAT_SHISH, COATED_FROGS_LEGS, FILLETS, FINGERS, FROGBURGER, FROGSPAWN_GUMBO, GREEN_GLOOP_SOUP,
                GRUBS__LA_MODE, MUSHROOMS, ROAST_FROG);
        add(3, LOACH);
        add(6, FROG_SPAWN);
        add(10, COOKED_SLIMY_EEL);
        add(8, CAVE_EEL);
        add(10, EEL_SUSHI);

        add(6, GARDEN_PIE, HALF_A_GARDEN_PIE);
        add(6, FISH_PIE, HALF_A_FISH_PIE);
        add(7, BOTANICAL_PIE, HALF_A_BOTANICAL_PIE);
        add(8, MUSHROOM_PIE, HALF_A_MUSHROOM_PIE);
        add(8, ADMIRAL_PIE, HALF_AN_ADMIRAL_PIE);
        add(11, WILD_PIE, HALF_A_WILD_PIE);
        add(11, SUMMER_PIE, HALF_A_SUMMER_PIE);
        add(10, DRAGONFRUIT_PIE, HALF_A_DRAGONFRUIT_PIE);
    }

    private final Map<Integer, Integer> healing = new HashMap<>();

    private void add(int health, int... items)
    {
        assert items.length > 0;
        for (int item : items)
        {
            healing.put(item, health);
        }
    }

    public int get(int id)
    {
        return healing.get(id);
    }
}